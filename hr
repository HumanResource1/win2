<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HR Management System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .button-group {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }
        button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            color: #fff;
        }
        #checkInBtn {
            background-color: #007bff;
        }
        #checkOutBtn {
            background-color: #28a745;
        }
        #changeNameBtn {
            background-color: #ff9800;
        }
        #exportBtn {
            background-color: #6b7280;
        }
        #clearBtn {
            background-color: #dc3545;
        }
        #checkInBtn:disabled, #checkOutBtn:disabled, #changeNameBtn:disabled, #exportBtn:disabled, #clearBtn:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        #checkInStatus, #userSelectContainer {
            text-align: center;
            margin-bottom: 20px;
            font-size: 18px;
            color: #555;
        }
        #userSelect {
            padding: 8px;
            font-size: 16px;
            width: 200px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        .summary {
            font-size: 18px;
            color: #333;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            max-width: 400px;
            width: 90%;
        }
        .modal-content input, .modal-content select {
            padding: 8px;
            margin: 10px 0;
            width: 80%;
            font-size: 16px;
        }
        .modal-content button {
            background-color: #007bff;
        }
        @media (max-width: 600px) {
            .container {
                padding: 10px;
            }
            button {
                padding: 8px 16px;
                font-size: 14px;
            }
            th, td {
                font-size: 14px;
                padding: 8px;
            }
            .modal-content {
                width: 95%;
            }
            #userSelect {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>HR Management System</h1>
        <div id="userSelectContainer">
            <label for="userSelect">Select Employee: </label>
            <select id="userSelect" onchange="selectEmployee()">
                <option value="" disabled selected>Select an employee</option>
            </select>
        </div>
        <div class="button-group">
            <button id="checkInBtn" disabled onclick="handleCheckIn()">Check In</button>
            <button id="checkOutBtn" disabled onclick="handleCheckOut()">Check Out</button>
            <button id="changeNameBtn" onclick="showNameModal()">Register Employee</button>
            <button id="exportBtn" disabled onclick="exportToGoogleSheets()">Export to Google Sheets</button>
            <button id="clearBtn" onclick="clearRecords()">Clear Records</button>
        </div>
        <p id="checkInStatus"></p>
        <h2>Attendance Records</h2>
        <table id="attendanceTable">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Department</th>
                    <th>Date</th>
                    <th>Check In</th>
                    <th>Check Out</th>
                    <th>Hours Worked</th>
                    <th>Salary ($)</th>
                </tr>
            </thead>
            <tbody id="tableBody"></tbody>
        </table>
        <div class="summary">
            <p><strong>Total Hours Worked:</strong> <span id="totalHours">0.00</span></p>
            <p><strong>Total Salary Earned:</strong> $<span id="totalSalary">0.00</span></p>
        </div>
    </div>
    <div id="nameModal" class="modal">
        <div class="modal-content">
            <h2>Register Employee Details</h2>
            <input type="text" id="nameInput" placeholder="Enter full name">
            <select id="departmentInput">
                <option value="" disabled selected>Select Department</option>
                <option value="Engineering">Engineering</option>
                <option value="Marketing">Marketing</option>
                <option value="Sales">Sales</option>
                <option value="HR">HR</option>
                <option value="Finance">Finance</option>
            </select>
            <button onclick="saveEmployee()">Save</button>
        </div>
    </div>
    <script>
        const hourlyRate = 20; // $ per hour, adjustable
        let checkInTime = null;
        let selectedEmployee = null;
        let activeCheckIns = []; // Track active check-ins
        let employees = JSON.parse(localStorage.getItem('employees')) || [];
        let records = JSON.parse(localStorage.getItem('attendanceRecords')) || [];

        // Load on page start
        document.addEventListener('DOMContentLoaded', () => {
            updateEmployeeDropdown();
            if (employees.length === 0) {
                showNameModal();
            }
            updateTable();
            updateSummary();
        });

        function updateEmployeeDropdown() {
            const userSelect = document.getElementById('userSelect');
            userSelect.innerHTML = '<option value="" disabled selected>Select an employee</option>';
            employees.forEach(employee => {
                const option = document.createElement('option');
                option.value = employee.name;
                option.textContent = `${employee.name} (${employee.department})`;
                userSelect.appendChild(option);
            });
            selectEmployee();
        }

        function selectEmployee() {
            const userSelect = document.getElementById('userSelect');
            selectedEmployee = employees.find(emp => emp.name === userSelect.value) || null;
            // Check if the selected employee has an active check-in
            const activeCheckIn = activeCheckIns.find(checkIn => checkIn.name === (selectedEmployee ? selectedEmployee.name : null));
            checkInTime = activeCheckIn ? new Date(activeCheckIn.checkInTime) : null;
            enableButtons();
            document.getElementById('checkInStatus').textContent = checkInTime ? `${selectedEmployee.name} checked in at: ${formatTime(checkInTime)}` : '';
        }

        function showNameModal() {
            document.getElementById('nameModal').style.display = 'flex';
            document.getElementById('nameInput').value = '';
            document.getElementById('departmentInput').value = '';
            document.getElementById('nameInput').focus();
        }

        function saveEmployee() {
            const nameInput = document.getElementById('nameInput').value.trim();
            const departmentInput = document.getElementById('departmentInput').value;
            if (!nameInput || !departmentInput) {
                alert('Please enter a valid name and select a department.');
                return;
            }
            if (employees.some(emp => emp.name === nameInput)) {
                alert('Employee name already exists. Please choose a different name.');
                return;
            }
            employees.push({ name: nameInput, department: departmentInput });
            localStorage.setItem('employees', JSON.stringify(employees));
            document.getElementById('nameModal').style.display = 'none';
            updateEmployeeDropdown();
        }

        function enableButtons() {
            document.getElementById('checkInBtn').disabled = !selectedEmployee || !!activeCheckIns.find(checkIn => checkIn.name === (selectedEmployee ? selectedEmployee.name : null));
            document.getElementById('checkOutBtn').disabled = !selectedEmployee || !checkInTime;
            document.getElementById('exportBtn').disabled = records.length === 0;
            document.getElementById('clearBtn').disabled = records.length === 0 && activeCheckIns.length === 0;
        }

        function formatTime(date) {
            if (!date) return '';
            return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        }

        function calculateHoursWorked(checkIn, checkOut) {
            if (!checkIn || !checkOut) return 0;
            const diffMs = checkOut - checkIn;
            return (diffMs / (1000 * 60 * 60)).toFixed(2);
        }

        function handleCheckIn() {
            if (!selectedEmployee) {
                alert('Please select an employee first!');
                return;
            }
            // Block check-in if the employee is already checked in
            if (activeCheckIns.find(checkIn => checkIn.name === selectedEmployee.name)) {
                alert('Employee is already checked in! Please check out first.');
                return;
            }
            checkInTime = new Date();
            activeCheckIns.push({
                name: selectedEmployee.name,
                department: selectedEmployee.department,
                date: checkInTime.toLocaleDateString(),
                checkIn: formatTime(checkInTime),
                checkInTime: checkInTime.toISOString(),
                checkOut: '',
                hoursWorked: '0.00',
                salary: '0.00'
            });
            document.getElementById('checkInStatus').textContent = `${selectedEmployee.name} checked in at: ${formatTime(checkInTime)}`;
            document.getElementById('checkInBtn').disabled = true;
            document.getElementById('checkOutBtn').disabled = false;
            updateTable();
        }

        function handleCheckOut() {
            if (!selectedEmployee) {
                alert('Please select an employee first!');
                return;
            }
            if (!checkInTime) {
                alert('Please check in first!');
                return;
            }
            const checkOutTime = new Date();
            const hoursWorked = calculateHoursWorked(checkInTime, checkOutTime);
            const salary = (hoursWorked * hourlyRate).toFixed(2);
            const activeCheckInIndex = activeCheckIns.findIndex(checkIn => checkIn.name === selectedEmployee.name);
            if (activeCheckInIndex === -1) {
                alert('No active check-in found for this employee!');
                return;
            }
            const completedRecord = {
                name: selectedEmployee.name,
                department: selectedEmployee.department,
                date: checkInTime.toLocaleDateString(),
                checkIn: formatTime(checkInTime),
                checkOut: formatTime(checkOutTime),
                hoursWorked,
                salary
            };
            records.push(completedRecord);
            localStorage.setItem('attendanceRecords', JSON.stringify(records));
            activeCheckIns.splice(activeCheckInIndex, 1);
            checkInTime = null;
            document.getElementById('checkInStatus').textContent = '';
            document.getElementById('checkInBtn').disabled = false;
            document.getElementById('checkOutBtn').disabled = true;
            document.getElementById('exportBtn').disabled = false;
            updateTable();
            updateSummary();
        }

        function updateTable() {
            const tableBody = document.getElementById('tableBody');
            tableBody.innerHTML = '';
            activeCheckIns.forEach(record => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${record.name}</td>
                    <td>${record.department}</td>
                    <td>${record.date}</td>
                    <td>${record.checkIn}</td>
                    <td>${record.checkOut}</td>
                    <td>${record.hoursWorked}</td>
                    <td>${record.salary}</td>
                `;
                tableBody.appendChild(row);
            });
            records.forEach(record => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${record.name}</td>
                    <td>${record.department}</td>
                    <td>${record.date}</td>
                    <td>${record.checkIn}</td>
                    <td>${record.checkOut}</td>
                    <td>${record.hoursWorked}</td>
                    <td>${record.salary}</td>
                `;
                tableBody.appendChild(row);
            });
        }

        function updateSummary() {
            const totalHours = records.reduce((sum, record) => sum + parseFloat(record.hoursWorked), 0).toFixed(2);
            const totalSalary = records.reduce((sum, record) => sum + parseFloat(record.salary), 0).toFixed(2);
            document.getElementById('totalHours').textContent = totalHours;
            document.getElementById('totalSalary').textContent = totalSalary;
        }

        async function exportToGoogleSheets() {
            try {
                document.getElementById('exportBtn').disabled = true;
                const response = await fetch('http://localhost:5000/api/attendance/export', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(records)
                });
                if (response.ok) {
                    alert('Records successfully exported to Google Sheets!');
                } else {
                    const error = await response.text();
                    alert(`Failed to export records: ${error}`);
                }
            } catch (error) {
                alert(`Error exporting to Google Sheets: ${error.message}`);
            } finally {
                document.getElementById('exportBtn').disabled = records.length === 0;
            }
        }

        function clearRecords() {
            if (activeCheckIns.length > 0 || records.length > 0) {
                activeCheckIns = [];
                records = [];
                localStorage.removeItem('attendanceRecords');
                checkInTime = null;
                document.getElementById('checkInStatus').textContent = '';
                updateTable();
                updateSummary();
                enableButtons();
            }
        }
    </script>
</body>
</html>
